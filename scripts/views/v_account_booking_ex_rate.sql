create or replace view V_ACCOUNT_BOOKING_EX_RATE as
  select PROJECT_ID,
         ACCOUNT_BOOKING_ID,
         BOOKING_ENTERED_DATE, 
         ACCOUNT_BOOKING_TYPE_ID, 
         ACCOUNT_ID,
         CURRENCY_ID,
         AMOUNT,
         EX_RATE,
         case when EX_RATE>0 then AMOUNT/EX_RATE end AMOUNT_IN_BASE
  from (
    select ACCOUNT.PROJECT_ID,
           AB.ACCOUNT_BOOKING_ID,
           AB.BOOKING_ENTERED_DATE, 
           ABT.ACCOUNT_BOOKING_TYPE_ID, 
           ACCOUNT.ACCOUNT_ID,
           ACCOUNT.CURRENCY_ID,
           AB.AMOUNT*ABT.IN_OUT_FACTOR AMOUNT,
           case when PROJECT.PROJECT_ID is null then
               avg_ex_rate(avg_ex_rate_params(AB.AMOUNT,case when AB_CONV_FROM.AMOUNT>0 then AB.AMOUNT/AB_CONV_FROM.AMOUNT end)) over (partition by ACCOUNT.CURRENCY_ID order by AB.BOOKING_ENTERED_DATE, AB.ACCOUNT_BOOKING_ID) 
           else
               1
           end EX_RATE
    from ACCOUNT_BOOKING AB
    join ACCOUNT on AB.ACCOUNT_ID=ACCOUNT.ACCOUNT_ID
    left join PROJECT on ACCOUNT.PROJECT_ID=PROJECT.PROJECT_ID and ACCOUNT.CURRENCY_ID=PROJECT.BASE_CURRENCY_ID
    join ACCOUNT_BOOKING_TYPE ABT on AB.ACCOUNT_BOOKING_TYPE_ID=ABT.ACCOUNT_BOOKING_TYPE_ID
    left join CONVERSION on AB.ACCOUNT_BOOKING_ID=CONVERSION.TO_ACCOUNT_BOOKING_ID
    left join (select ACCOUNT_BOOKING.* 
               from ACCOUNT_BOOKING 
               join ACCOUNT on ACCOUNT_BOOKING.ACCOUNT_ID=ACCOUNT.ACCOUNT_ID
               join PROJECT on ACCOUNT.PROJECT_ID=PROJECT.PROJECT_ID and ACCOUNT.CURRENCY_ID=PROJECT.BASE_CURRENCY_ID) AB_CONV_FROM on CONVERSION.FROM_ACCOUNT_BOOKING_ID=AB_CONV_FROM.ACCOUNT_BOOKING_ID
   )
